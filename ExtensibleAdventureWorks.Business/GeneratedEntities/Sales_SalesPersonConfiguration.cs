// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace ExtensibleAdventureWorks.Business.Entities
{

    // SalesPerson
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.28.0.0")]
    public partial class Sales_SalesPersonConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Sales_SalesPerson>
    {
        public Sales_SalesPersonConfiguration()
            : this("Sales")
        {
        }

        public Sales_SalesPersonConfiguration(string schema)
        {
            ToTable("SalesPerson", schema);
            HasKey(x => x.BusinessEntityId);

            Property(x => x.BusinessEntityId).HasColumnName(@"BusinessEntityID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.TerritoryId).HasColumnName(@"TerritoryID").HasColumnType("int").IsOptional();
            Property(x => x.SalesQuota).HasColumnName(@"SalesQuota").HasColumnType("money").IsOptional().HasPrecision(19,4);
            Property(x => x.Bonus).HasColumnName(@"Bonus").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.CommissionPct).HasColumnName(@"CommissionPct").HasColumnType("smallmoney").IsRequired().HasPrecision(10,4);
            Property(x => x.SalesYtd).HasColumnName(@"SalesYTD").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.SalesLastYear).HasColumnName(@"SalesLastYear").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.Rowguid).HasColumnName(@"rowguid").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasOptional(a => a.Sales_SalesTerritory).WithMany(b => b.Sales_SalesPersons).HasForeignKey(c => c.TerritoryId).WillCascadeOnDelete(false); // FK_SalesPerson_SalesTerritory_TerritoryID
            HasRequired(a => a.HumanResources_Employee).WithOptional(b => b.Sales_SalesPerson).WillCascadeOnDelete(false); // FK_SalesPerson_Employee_BusinessEntityID
            this.ConfigureExtensions();
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
