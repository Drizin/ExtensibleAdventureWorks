// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace ExtensibleAdventureWorks.Business.Entities
{

    // Vendor
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.28.0.0")]
    public partial class Purchasing_VendorConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Purchasing_Vendor>
    {
        public Purchasing_VendorConfiguration()
            : this("Purchasing")
        {
        }

        public Purchasing_VendorConfiguration(string schema)
        {
            ToTable("Vendor", schema);
            HasKey(x => x.BusinessEntityId);

            Property(x => x.BusinessEntityId).HasColumnName(@"BusinessEntityID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.AccountNumber).HasColumnName(@"AccountNumber").HasColumnType("nvarchar").IsRequired().HasMaxLength(15);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.CreditRating).HasColumnName(@"CreditRating").HasColumnType("tinyint").IsRequired();
            Property(x => x.PreferredVendorStatus).HasColumnName(@"PreferredVendorStatus").HasColumnType("bit").IsRequired();
            Property(x => x.ActiveFlag).HasColumnName(@"ActiveFlag").HasColumnType("bit").IsRequired();
            Property(x => x.PurchasingWebServiceUrl).HasColumnName(@"PurchasingWebServiceURL").HasColumnType("nvarchar").IsOptional().HasMaxLength(1024);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.Person_BusinessEntity).WithOptional(b => b.Purchasing_Vendor).WillCascadeOnDelete(false); // FK_Vendor_BusinessEntity_BusinessEntityID
            this.ConfigureExtensions();
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
