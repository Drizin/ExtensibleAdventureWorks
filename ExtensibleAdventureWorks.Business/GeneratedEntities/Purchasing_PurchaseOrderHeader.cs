// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace ExtensibleAdventureWorks.Business.Entities
{

    // PurchaseOrderHeader
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.28.0.0")]
    public partial class Purchasing_PurchaseOrderHeader
    {

        ///<summary>
        /// Primary key.
        ///</summary>
        public int PurchaseOrderId { get; set; } // PurchaseOrderID (Primary key)

        ///<summary>
        /// Incremental number to track changes to the purchase order over time.
        ///</summary>
        public byte RevisionNumber { get; set; } = 0; // RevisionNumber

        ///<summary>
        /// Order current status. 1 = Pending; 2 = Approved; 3 = Rejected; 4 = Complete
        ///</summary>
        public byte Status { get; set; } = 1; // Status

        ///<summary>
        /// Employee who created the purchase order. Foreign key to Employee.BusinessEntityID.
        ///</summary>
        public int EmployeeId { get; set; } // EmployeeID

        ///<summary>
        /// Vendor with whom the purchase order is placed. Foreign key to Vendor.BusinessEntityID.
        ///</summary>
        public int VendorId { get; set; } // VendorID

        ///<summary>
        /// Shipping method. Foreign key to ShipMethod.ShipMethodID.
        ///</summary>
        public int ShipMethodId { get; set; } // ShipMethodID

        ///<summary>
        /// Purchase order creation date.
        ///</summary>
        public System.DateTime OrderDate { get; set; } = System.DateTime.Now; // OrderDate

        ///<summary>
        /// Estimated shipment date from the vendor.
        ///</summary>
        public System.DateTime? ShipDate { get; set; } // ShipDate

        ///<summary>
        /// Purchase order subtotal. Computed as SUM(PurchaseOrderDetail.LineTotal)for the appropriate PurchaseOrderID.
        ///</summary>
        public decimal SubTotal { get; set; } = 0.00m; // SubTotal

        ///<summary>
        /// Tax amount.
        ///</summary>
        public decimal TaxAmt { get; set; } = 0.00m; // TaxAmt

        ///<summary>
        /// Shipping cost.
        ///</summary>
        public decimal Freight { get; set; } = 0.00m; // Freight

        ///<summary>
        /// Total due to vendor. Computed as Subtotal + TaxAmt + Freight.
        ///</summary>
        public decimal TotalDue { get; private set; } // TotalDue

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        public System.DateTime ModifiedDate { get; set; } = System.DateTime.Now; // ModifiedDate

        // Reverse navigation

        /// <summary>
        /// Child Purchasing_PurchaseOrderDetails where [PurchaseOrderDetail].[PurchaseOrderID] point to this entity (FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Purchasing_PurchaseOrderDetail> Purchasing_PurchaseOrderDetails { get; set; } = new System.Collections.Generic.List<Purchasing_PurchaseOrderDetail>(); // PurchaseOrderDetail.FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID

        // Foreign keys

        /// <summary>
        /// Parent HumanResources_Employee pointed by [PurchaseOrderHeader].([EmployeeId]) (FK_PurchaseOrderHeader_Employee_EmployeeID)
        /// </summary>
        public virtual HumanResources_Employee HumanResources_Employee { get; set; } // FK_PurchaseOrderHeader_Employee_EmployeeID
        /// <summary>
        /// Parent Purchasing_ShipMethod pointed by [PurchaseOrderHeader].([ShipMethodId]) (FK_PurchaseOrderHeader_ShipMethod_ShipMethodID)
        /// </summary>
        public virtual Purchasing_ShipMethod Purchasing_ShipMethod { get; set; } // FK_PurchaseOrderHeader_ShipMethod_ShipMethodID
        /// <summary>
        /// Parent Purchasing_Vendor pointed by [PurchaseOrderHeader].([VendorId]) (FK_PurchaseOrderHeader_Vendor_VendorID)
        /// </summary>
        public virtual Purchasing_Vendor Purchasing_Vendor { get; set; } // FK_PurchaseOrderHeader_Vendor_VendorID
    }

}
// </auto-generated>
