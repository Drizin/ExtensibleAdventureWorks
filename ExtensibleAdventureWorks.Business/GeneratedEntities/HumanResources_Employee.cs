// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace ExtensibleAdventureWorks.Business.Entities
{

    // Employee
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.28.0.0")]
    public partial class HumanResources_Employee
    {

        ///<summary>
        /// Primary key for Employee records.  Foreign key to BusinessEntity.BusinessEntityID.
        ///</summary>
        public int BusinessEntityId { get; set; } // BusinessEntityID (Primary key)

        ///<summary>
        /// Unique national identification number such as a social security number.
        ///</summary>
        public string NationalIdNumber { get; set; } // NationalIDNumber (length: 15)

        ///<summary>
        /// Network login.
        ///</summary>
        public string LoginId { get; set; } // LoginID (length: 256)

        ///<summary>
        /// Where the employee is located in corporate hierarchy.
        ///</summary>
        public System.Data.Entity.Hierarchy.HierarchyId OrganizationNode { get; set; } // OrganizationNode

        ///<summary>
        /// The depth of the employee in the corporate hierarchy.
        ///</summary>
        public short? OrganizationLevel { get; private set; } // OrganizationLevel

        ///<summary>
        /// Work title such as Buyer or Sales Representative.
        ///</summary>
        public string JobTitle { get; set; } // JobTitle (length: 50)

        ///<summary>
        /// Date of birth.
        ///</summary>
        public System.DateTime BirthDate { get; set; } // BirthDate

        ///<summary>
        /// M = Married, S = Single
        ///</summary>
        public string MaritalStatus { get; set; } // MaritalStatus (length: 1)

        ///<summary>
        /// M = Male, F = Female
        ///</summary>
        public string Gender { get; set; } // Gender (length: 1)

        ///<summary>
        /// Employee hired on this date.
        ///</summary>
        public System.DateTime HireDate { get; set; } // HireDate

        ///<summary>
        /// Job classification. 0 = Hourly, not exempt from collective bargaining. 1 = Salaried, exempt from collective bargaining.
        ///</summary>
        public bool SalariedFlag { get; set; } = true; // SalariedFlag

        ///<summary>
        /// Number of available vacation hours.
        ///</summary>
        public short VacationHours { get; set; } = 0; // VacationHours

        ///<summary>
        /// Number of available sick leave hours.
        ///</summary>
        public short SickLeaveHours { get; set; } = 0; // SickLeaveHours

        ///<summary>
        /// 0 = Inactive, 1 = Active
        ///</summary>
        public bool CurrentFlag { get; set; } = true; // CurrentFlag

        ///<summary>
        /// ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
        ///</summary>
        public System.Guid Rowguid { get; set; } = System.Guid.NewGuid(); // rowguid

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        public System.DateTime ModifiedDate { get; set; } = System.DateTime.Now; // ModifiedDate

        // Reverse navigation

        /// <summary>
        /// Parent (One-to-One) HumanResources_Employee pointed by [SalesPerson].[BusinessEntityID] (FK_SalesPerson_Employee_BusinessEntityID)
        /// </summary>
        public virtual Sales_SalesPerson Sales_SalesPerson { get; set; } // SalesPerson.FK_SalesPerson_Employee_BusinessEntityID
        /// <summary>
        /// Child HumanResources_EmployeeDepartmentHistories where [EmployeeDepartmentHistory].[BusinessEntityID] point to this entity (FK_EmployeeDepartmentHistory_Employee_BusinessEntityID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<HumanResources_EmployeeDepartmentHistory> HumanResources_EmployeeDepartmentHistories { get; set; } = new System.Collections.Generic.List<HumanResources_EmployeeDepartmentHistory>(); // EmployeeDepartmentHistory.FK_EmployeeDepartmentHistory_Employee_BusinessEntityID
        /// <summary>
        /// Child HumanResources_EmployeePayHistories where [EmployeePayHistory].[BusinessEntityID] point to this entity (FK_EmployeePayHistory_Employee_BusinessEntityID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<HumanResources_EmployeePayHistory> HumanResources_EmployeePayHistories { get; set; } = new System.Collections.Generic.List<HumanResources_EmployeePayHistory>(); // EmployeePayHistory.FK_EmployeePayHistory_Employee_BusinessEntityID
        /// <summary>
        /// Child HumanResources_JobCandidates where [JobCandidate].[BusinessEntityID] point to this entity (FK_JobCandidate_Employee_BusinessEntityID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<HumanResources_JobCandidate> HumanResources_JobCandidates { get; set; } = new System.Collections.Generic.List<HumanResources_JobCandidate>(); // JobCandidate.FK_JobCandidate_Employee_BusinessEntityID
        /// <summary>
        /// Child Production_Documents where [Document].[Owner] point to this entity (FK_Document_Employee_Owner)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Production_Document> Production_Documents { get; set; } = new System.Collections.Generic.List<Production_Document>(); // Document.FK_Document_Employee_Owner
        /// <summary>
        /// Child Purchasing_PurchaseOrderHeaders where [PurchaseOrderHeader].[EmployeeID] point to this entity (FK_PurchaseOrderHeader_Employee_EmployeeID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Purchasing_PurchaseOrderHeader> Purchasing_PurchaseOrderHeaders { get; set; } = new System.Collections.Generic.List<Purchasing_PurchaseOrderHeader>(); // PurchaseOrderHeader.FK_PurchaseOrderHeader_Employee_EmployeeID

        // Foreign keys

        /// <summary>
        /// Parent Person_Person pointed by [Employee].([BusinessEntityId]) (FK_Employee_Person_BusinessEntityID)
        /// </summary>
        public virtual Person_Person Person_Person { get; set; } // FK_Employee_Person_BusinessEntityID
    }

}
// </auto-generated>
