// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace ExtensibleAdventureWorks.Business.Entities
{

    // Document
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.28.0.0")]
    public partial class Production_Document
    {

        ///<summary>
        /// Primary key for Document records.
        ///</summary>
        public System.Data.Entity.Hierarchy.HierarchyId DocumentNode { get; set; } // DocumentNode (Primary key)

        ///<summary>
        /// Depth in the document hierarchy.
        ///</summary>
        public short? DocumentLevel { get; private set; } // DocumentLevel

        ///<summary>
        /// Title of the document.
        ///</summary>
        public string Title { get; set; } // Title (length: 50)

        ///<summary>
        /// Employee who controls the document.  Foreign key to Employee.BusinessEntityID
        ///</summary>
        public int Owner { get; set; } // Owner

        ///<summary>
        /// 0 = This is a folder, 1 = This is a document.
        ///</summary>
        public bool FolderFlag { get; set; } = false; // FolderFlag

        ///<summary>
        /// File name of the document
        ///</summary>
        public string FileName { get; set; } // FileName (length: 400)

        ///<summary>
        /// File extension indicating the document type. For example, .doc or .txt.
        ///</summary>
        public string FileExtension { get; set; } // FileExtension (length: 8)

        ///<summary>
        /// Revision number of the document.
        ///</summary>
        public string Revision { get; set; } // Revision (length: 5)

        ///<summary>
        /// Engineering change approval number.
        ///</summary>
        public int ChangeNumber { get; set; } = 0; // ChangeNumber

        ///<summary>
        /// 1 = Pending approval, 2 = Approved, 3 = Obsolete
        ///</summary>
        public byte Status { get; set; } // Status

        ///<summary>
        /// Document abstract.
        ///</summary>
        public string DocumentSummary { get; set; } // DocumentSummary

        ///<summary>
        /// Complete document.
        ///</summary>
        public byte[] Document { get; set; } // Document

        ///<summary>
        /// ROWGUIDCOL number uniquely identifying the record. Required for FileStream.
        ///</summary>
        public System.Guid Rowguid { get; set; } = System.Guid.NewGuid(); // rowguid

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        public System.DateTime ModifiedDate { get; set; } = System.DateTime.Now; // ModifiedDate

        // Reverse navigation

        /// <summary>
        /// Child Production_ProductDocuments where [ProductDocument].[DocumentNode] point to this entity (FK_ProductDocument_Document_DocumentNode)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Production_ProductDocument> Production_ProductDocuments { get; set; } = new System.Collections.Generic.List<Production_ProductDocument>(); // ProductDocument.FK_ProductDocument_Document_DocumentNode

        // Foreign keys

        /// <summary>
        /// Parent HumanResources_Employee pointed by [Document].([Owner]) (FK_Document_Employee_Owner)
        /// </summary>
        public virtual HumanResources_Employee HumanResources_Employee { get; set; } // FK_Document_Employee_Owner
    }

}
// </auto-generated>
